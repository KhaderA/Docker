Docker Orchestration/Management terminologies:
---------------------------------------------
Container 
Service,task 
Stack
Swarm
Compose


Container - Stand alone running version of an image
Service - A group or collection of containers running the same copy of a docker image. Used for scaling.
Task - Every individual unit/container in a service is called a task
Stack - Docker command used for multi services application. The stack commands output almost remains same 
        as that of service      command. The difference is that service command is used for a single service. 
		But stack command is used for an application deployed as multiple services.
Swarm - Its the native Docker cluster management or orchestration tool.		




Similarities/Differences
- docker stack Vs docker service
- docker run Vs docker compose
- CMD vs ENTRYPOINT





================================================================================
Docker Deep Dive notes(pluralsight):
-----------------------------------
Image - Technically speaking it is a set of layers grouped by a manifest file.
Container- A running version of an image.

1) Architecture big picture
Container - Isolated area of an OS with resource usage limits applied.
Linux Kernel Internals:
------------------------
i) Namespaces - this is about isolation. Its is about isolating the OS resources like file systems, process trees and users and carve them as multiple operating systems called containers. Linux namespaces -> Process ID(pid),Network(net), Filesystem/mount(mnt), Inter-proc comms(ipc), UTS(uls), User(user).

ii) Control Groups - this is about grouping objects and setting limits. The idea is to group resources and impose limits. Like, how much cpu, ram, disk should a container consume etc.

iii) Union Filesystem - Read only kind of layered file system for container. It resembles onions layer.

Docker Engine:
--------------
Daemon:
Recieves commands from docker client and converts them to rest APIs. Then it contacts containerd. Also takes care of orchestration, builds, stacks, overlay-networks.
Containerd:








===========================================================
Docker Networking:
------------------
Basics:
1) Three pillars of Docker networking
- CNM(Container Network Model):
	DNA of Docker networking
	CNM is a specification document or design documentation for Docker Networking. Reference link https://github.com/docker/libnetwork/docs/
	Fair to say, libnetwork and drivers draw things from CNM
	
	CNM defines 3 major constructs,
	1) Sandbox (just the namespace in linux, other term in other OS)
	   - Isolated space in OS where we can create the fullnetwork stack like ipconfig, DNS, routing tables etc.
		2) Endpoints
		- These are Network interfaces like etho, eth1 etc
	3) Network
		- Network is a collection/grouping of endpoints
- libnetwork
	Libnetwork is the real implementation of CNM by Docker INC. written in Go/GoLang.
	Central place for all Docker Networking logic, API, UX etc.

- drivers
	Network specific details.
	Each network type has its own driver. 



Use Cases & Drivers:
	1) Single Host Networking
		Default single host network is bridge network, it comes with bridge driver.
		This network will be available only on the host server we create it.

	2) Multi Host Networking
		Docker provides out of the box multi host network called overlay 


Network Services:





Network Scope:
1) local
2) Swarm mode
